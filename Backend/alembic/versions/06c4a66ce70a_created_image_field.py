"""created image field

Revision ID: 06c4a66ce70a
Revises: a0dac38e5ac5
Create Date: 2024-06-17 15:56:18.337503

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '06c4a66ce70a'
down_revision: Union[str, None] = 'a0dac38e5ac5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'category', ['id'])
    op.drop_column('freelancer', 'location')
    op.alter_column('gigs', 'price',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('gigs', 'rating',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=3, asdecimal=True),
               existing_nullable=True)
    op.drop_column('hire_manager', 'location')
    op.add_column('user', sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('user', sa.Column('is_freelancer', sa.Boolean(), nullable=False))
    op.add_column('user', sa.Column('is_hire_manager', sa.Boolean(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'is_hire_manager')
    op.drop_column('user', 'is_freelancer')
    op.drop_column('user', 'location')
    op.add_column('hire_manager', sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.alter_column('gigs', 'rating',
               existing_type=sa.Float(precision=3, asdecimal=True),
               type_=sa.REAL(),
               existing_nullable=True)
    op.alter_column('gigs', 'price',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.NUMERIC(precision=5, scale=2),
               existing_nullable=False)
    op.add_column('freelancer', sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'category', type_='unique')
    # ### end Alembic commands ###
