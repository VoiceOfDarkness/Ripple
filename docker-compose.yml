version: "3.8"

services:
  backend:
    build: ./backend
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - media:/app/media
    ports:
      - "5173:5173"
    depends_on:
      - backend

  db:
    image: postgres:13
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    restart: on-failure:3
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ripple" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    command: redis-server
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build: ./backend
    env_file:
      - .env
    entrypoint: celery
    command: -A app.tasks.email_service worker --loglevel=info
    volumes:
      - ./backend:/app
    restart: unless-stopped
    depends_on:
      - backend

  celery-beat:
    build: ./backend
    env_file:
      - .env
    entrypoint: celery
    command: -A app.tasks.email_service beat --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
  media:
